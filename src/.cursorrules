# .cursorrules для React проектов

## Общие принципы
- Следуй принципам чистого кода
- Используй функциональные компоненты
- Применяй принципы React Hooks
- Следуй принципам компонентного дизайна

## Стиль кода
- Используй ES6+ синтаксис
- camelCase для переменных и функций
- PascalCase для компонентов
- UPPER_SNAKE_CASE для констант
- Используй const для компонентов

## Структура компонентов
- Один компонент на файл
- Используй .jsx/.tsx расширения
- Экспортируй по умолчанию компонент
- Группируй импорты: React, внешние, внутренние

## Hooks
- Используй useState для локального состояния
- Используй useEffect для побочных эффектов
- Создавай кастомные хуки для переиспользуемой логики
- Следуй правилам хуков

## Пропсы
- Используй PropTypes или TypeScript
- Деструктурируй пропсы в параметрах
- Устанавливай значения по умолчанию
- Валидируй пропсы

## Состояние
- Минимизируй локальное состояние
- Используй контекст для глобального состояния
- Применяй useReducer для сложной логики
- Избегай мутации состояния

## Производительность
- Используй React.memo для оптимизации
- Применяй useMemo и useCallback
- Избегай лишних ре-рендеров
- Используй lazy loading

## Стилизация
- Используй CSS Modules или Styled Components
- Следуй принципам responsive design
- Применяй CSS Grid и Flexbox
- Используй CSS переменные

## Тестирование
- Используй React Testing Library
- Тестируй поведение, а не реализацию
- Создавай моки для внешних зависимостей
- Покрытие кода >80%

## Доступность
- Используй семантические HTML теги
- Добавляй alt атрибуты для изображений
- Используй ARIA атрибуты
- Обеспечивай навигацию с клавиатуры

## Безопасность
- Валидируй пользовательский ввод
- Используй dangerouslySetInnerHTML осторожно
- Защищайся от XSS атак
- Не передавайте секреты в клиентский код 